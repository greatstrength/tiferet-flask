name: Build and Publish Tiferet Flask

on:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]

      - name: Run tests
        run: |
          pytest --verbose

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event.release.prerelease == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools>=61.0 wheel

      - name: Extract version from tiferet_flask/__init__.py
        id: get_version
        run: |
          VERSION=$(python -c "from tiferet_flask import __version__; print(__version__)")
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Validate version matches release tag
        run: |
          RELEASE_TAG=${{ github.event.release.tag_name }}
          if [ "$RELEASE_TAG" != "v$PACKAGE_VERSION" ]; then
            echo "Error: Release tag ($RELEASE_TAG) does not match package version ($PACKAGE_VERSION)"
            exit 1
          fi

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-dist
          path: dist/

  build-prerelease:
    runs-on: ubuntu-latest
    needs: test
    if: github.event.release.prerelease == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools>=61.0 wheel

      - name: Extract version from tiferet_flask/__init__.py
        id: get_version
        run: |
          VERSION=$(python -c "from tiferet_flask import __version__; print(__version__)")
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Validate version matches release tag
        run: |
          RELEASE_TAG=${{ github.event.release.tag_name }}
          if [ "$RELEASE_TAG" != "v$PACKAGE_VERSION" ]; then
            echo "Error: Release tag ($RELEASE_TAG) does not match package version ($PACKAGE_VERSION)"
            exit 1
          fi

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prerelease-dist
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.release.prerelease == false
    environment: pypi

    permissions:
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: package-dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/

  publish-prerelease:
    runs-on: ubuntu-latest
    needs: build-prerelease
    if: github.event.release.prerelease == true

    permissions:
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: prerelease-dist
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/